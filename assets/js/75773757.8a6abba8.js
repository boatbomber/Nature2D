"use strict";(self.webpackChunknature_2_d_docs=self.webpackChunknature_2_d_docs||[]).push([[124],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9162:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},c="Creating a Canvas",u={unversionedId:"tutorial-basics/Custom Canvas",id:"tutorial-basics/Custom Canvas",isDocsHomePage:!1,title:"Creating a Canvas",description:"A canvas specifies boundaries out of which RigidBodies won't be able to go unless RigidBody.KeepInCanvas is set to false. By default this canvas is set to workspace.CurrentCamera.ViewportSize. In order to specify a new canvas, we use the Engine:CreateCanvas() method.",source:"@site/docs/tutorial-basics/Custom Canvas.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Custom Canvas",permalink:"/Nature2D/docs/tutorial-basics/Custom Canvas",editUrl:"https://github.com/jaipack17/Nature2D/edit/master/docs/docs/tutorial-basics/Custom Canvas.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Creating RigidBodies",permalink:"/Nature2D/docs/tutorial-basics/Creating RigidBodies"},next:{title:"Custom Physical Properties",permalink:"/Nature2D/docs/tutorial-basics/Custom Physical Properties"}},l=[],p={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creating-a-canvas"},"Creating a Canvas"),(0,o.kt)("p",null,"A canvas specifies boundaries out of which RigidBodies won't be able to go unless RigidBody.KeepInCanvas is set to false. By default this canvas is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"workspace.CurrentCamera.ViewportSize"),". In order to specify a new canvas, we use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Engine:CreateCanvas()")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Nature2D = require(ReplicatedStorage.Nature2D)\n\nlocal engine = Nature2D.init(screenGuiInstance)\nengine:CreateCanvas(Vector2.new(100, 100), Vector2.new(500, 300)) -- topLeft: (100, 100), size: (500, 300)\n')),(0,o.kt)("p",null,"The above should specify a canvas as such:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/74130881/137574929-6a5f3aaf-bd38-448b-8105-bcda8e6b2f6c.png",alt:"image"})),(0,o.kt)("p",null,'In order to render custom constraints and points, it is important to set the "frame" of the canvas. To do that:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"engine:CreateCanvas(Vector2.new(100, 100), Vector2.new(500, 300), GuiFrameInstance)\n\n-- OR\n\nengine.canvas.frame = GuiFrameInstance\n")))}d.isMDXComponent=!0}}]);