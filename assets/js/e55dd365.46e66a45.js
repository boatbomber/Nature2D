"use strict";(self.webpackChunknature_2_d_docs=self.webpackChunknature_2_d_docs||[]).push([[866],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(a),m=i,h=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return a?n.createElement(h,r(r({ref:t},u),{},{components:a})):n.createElement(h,r({ref:t},u))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var d=2;d<o;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},154:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var n=a(7462),i=a(3366),o=(a(7294),a(3905)),r=["components"],s={sidebar_position:8},l="RigidBody State Management",d={unversionedId:"tutorial-basics/RigidBody State Management",id:"tutorial-basics/RigidBody State Management",isDocsHomePage:!1,title:"RigidBody State Management",description:"States act like custom properties for RigidBodies. These states are similar to how Attributes for Instances work in Roblox Studio. With the help of these states, you are able to keep track of some arbitrary data for multiple RigidBodies. States can be dealt with, using RigidBodyGetState().",source:"@site/docs/tutorial-basics/RigidBody State Management.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/RigidBody State Management",permalink:"/Nature2D/docs/tutorial-basics/RigidBody State Management",editUrl:"https://github.com/jaipack17/Nature2D/edit/master/docs/docs/tutorial-basics/RigidBody State Management.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Collision Filtering",permalink:"/Nature2D/docs/tutorial-basics/Collision Filtering"},next:{title:"Creating Custom RigidBodies",permalink:"/Nature2D/docs/tutorial-basics/Creating Custom RigidBodies"}},u=[],c={toc:u};function p(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rigidbody-state-management"},"RigidBody State Management"),(0,o.kt)("p",null,"States act like custom properties for RigidBodies. These states are similar to how Attributes for Instances work in Roblox Studio. With the help of these states, you are able to keep track of some arbitrary data for multiple RigidBodies. States can be dealt with, using ",(0,o.kt)("inlineCode",{parentName:"p"},"RigidBody:SetState()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"RigidBody:GetState()"),"."),(0,o.kt)("p",null,"SetState() method takes in the name of the state which is a string as its first argument and then its value as the second argument.\nGetState() takes in just the name of the state which you initialized earlier and returns the value for the state."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local body = Engine:Create("RigidBody", { Object = SomeObject, Collidable = true, Anchored = false })\n\nbody:SetState("Health", 100)\nprint(body:GetState("Health")) -- 100\n')),(0,o.kt)("p",null,"States can help a lot in scenarios where using just a single variable for storing some attribute is impossible. Consider this simple example. You have a lot of RigidBodies. You have a Health attribute for each RigidBody with an initial value of 100. You select a random RigidBody every second and subtract 10 from that RigidBody's health. If the health becomes less than 0, the RigidBody is destroyed. Using just a single variable for this is impossible, since you are said to manage multiple RigidBodies' healths!"),(0,o.kt)("p",null,"Let's lay this down in our code! We start by creating some amount of RigidBodies and initialize their Health as 100. And store the RigidBody in a separate array."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local boxes = {}\n\nfor i = 1, 10 do \n   local box = Engine:Create("RigidBody", {\n       Object = TheGuiInstance,\n       Anchored = false,\n       Collidable = true,\n       Gravity = Vector2.new(0, 0.2)\n   })\n\n   box:SetState("Health", 100)\n\n   table.insert(boxes, box)\nend\n')),(0,o.kt)("p",null,"Next we create the while loop which has a wait time of approximately 1 second. Inside the for loop, we pick a random RigidBody, subtract 10 from its health and destroy it if its health is less than or equal to 0!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'while true do\n   local randomBox = boxes[math.random(1, #boxes)]\n\n   local health = randomBox:GetState("Health")\n   randomBox:SetState("Health", health - 10)\n\n   if randomBox:GetState("Health") <= 0 then \n       randomBox:Destroy()\n   end\n\n   task.wait(1)\nend\n')),(0,o.kt)("p",null,"That's just 1 example of how you can use custom attributes for RigidBodies. You will find more situations like these when working with RigidBodies, if so, States are a great solution!"))}p.isMDXComponent=!0}}]);