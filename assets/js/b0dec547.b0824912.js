"use strict";(self.webpackChunknature_2_d_docs=self.webpackChunknature_2_d_docs||[]).push([[488],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=i.createContext({}),s=function(e){var n=i.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,h=c["".concat(d,".").concat(m)]||c[m]||p[m]||l;return t?i.createElement(h,r(r({ref:n},u),{},{components:t})):i.createElement(h,r({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=c;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=t[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8767:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return u},default:function(){return c}});var i=t(7462),a=t(3366),l=(t(7294),t(3905)),r=["components"],o={sidebar_position:1},d="Engine",s={unversionedId:"api/Engine",id:"api/Engine",isDocsHomePage:!1,title:"Engine",description:"The Engine or the core of the library handles all the RigidBodies, constraints and points. It's responsible for the simulation of these elements and handling all tasks related to the library.",source:"@site/docs/api/Engine.md",sourceDirName:"api",slug:"/api/Engine",permalink:"/Nature2D/docs/api/Engine",editUrl:"https://github.com/jaipack17/Nature2D/edit/master/docs/docs/api/Engine.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Using Nature2D Plugins",permalink:"/Nature2D/docs/tutorial-basics/Using Nature2D Plugins"},next:{title:"RigidBody",permalink:"/Nature2D/docs/api/RigidBody"}},u=[{value:"Functions",id:"functions",children:[{value:"<code>Engine.init()</code>",id:"engineinit",children:[],level:3},{value:"<code>Engine:Create()</code>",id:"enginecreate",children:[{value:"Creating new Points",id:"creating-new-points",children:[],level:4},{value:"Creating new Constraints",id:"creating-new-constraints",children:[],level:4},{value:"Creating new RigidBodies",id:"creating-new-rigidbodies",children:[],level:4}],level:3},{value:"<code>Engine:CreateCanvas()</code>",id:"enginecreatecanvas",children:[],level:3},{value:"<code>Engine:Start()</code>",id:"enginestart",children:[],level:3},{value:"<code>Engine:Stop()</code>",id:"enginestop",children:[],level:3},{value:"<code>Engine:SetPhysicalProperty()</code>",id:"enginesetphysicalproperty",children:[],level:3},{value:"<code>Engine:SetSimulationSpeed()</code>",id:"enginesetsimulationspeed",children:[],level:3},{value:"<code>Engine:UseQuadtrees()</code>",id:"engineusequadtrees",children:[],level:3},{value:"<code>Engine:FrameRateIndependent()</code>",id:"engineframerateindependent",children:[],level:3}],level:2},{value:"Fetch Methods",id:"fetch-methods",children:[{value:"<code>Engine:GetBodies()</code>",id:"enginegetbodies",children:[],level:3},{value:"<code>Engine:GetConstraints()</code>",id:"enginegetconstraints",children:[],level:3},{value:"<code>Engine:GetPoints()</code>",id:"enginegetpoints",children:[],level:3},{value:"<code>Engine:GetBodyById()</code>",id:"enginegetbodybyid",children:[],level:3},{value:"<code>Engine:GetConstraintById()</code>",id:"enginegetconstraintbyid",children:[],level:3},{value:"<code>Engine:GetDebugInfo()</code>",id:"enginegetdebuginfo",children:[],level:3},{value:"<code>Engine:GetCurrentCanvas()</code>",id:"enginegetcurrentcanvas",children:[],level:3}],level:2},{value:"Events",id:"events",children:[{value:"<code>Engine.Started</code>",id:"enginestarted",children:[],level:3},{value:"<code>Engine.Stopped</code>",id:"enginestopped",children:[],level:3},{value:"<code>Engine.ObjectAdded</code>",id:"engineobjectadded",children:[],level:3},{value:"<code>Engine.ObjectRemoved</code>",id:"engineobjectremoved",children:[],level:3},{value:"<code>Engine.Updated</code>",id:"engineupdated",children:[],level:3}],level:2}],p={toc:u};function c(e){var n=e.components,t=(0,a.Z)(e,r);return(0,l.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"engine"},"Engine"),(0,l.kt)("p",null,"The Engine or the core of the library handles all the RigidBodies, constraints and points. It's responsible for the simulation of these elements and handling all tasks related to the library."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"engineinit"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine.init()")),(0,l.kt)("p",null,"This method is used to initialize basic configurations of the engine and allocate memory for future tasks. The function takes in 1 parameter, a ScreenGui. It is a must, in order to handle Offsets produced by ScreenGui.IgnoreGuiInset without any visual bugs."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"screengui: ScreenGui")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"Engine"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginecreate"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:Create()")),(0,l.kt)("p",null,"This method is used to create new physics objects like Points, Constraints and RigidBodies."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"object: string, propertyTable: table")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"newObject: Point | RigidBody | Constraint"))),(0,l.kt)("h4",{id:"creating-new-points"},"Creating new Points"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"objectName - ",(0,l.kt)("inlineCode",{parentName:"li"},'"Point"')),(0,l.kt)("li",{parentName:"ul"},"valid properties - ",(0,l.kt)("inlineCode",{parentName:"li"},"Position: Vector2, Snap: boolean | nil, Visible: boolean | nil, KeepInCanvas: boolean | nil, Color: Color3 | nil, Radius: number | nil"))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),'"Must Have" Properties')),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Position: Vector2"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'Engine:Create("Point", {\n    Position = Vector2.new(100, 100),\n    Visible = false,\n    Snap = true\n})\n')),(0,l.kt)("h4",{id:"creating-new-constraints"},"Creating new Constraints"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"objectName - ",(0,l.kt)("inlineCode",{parentName:"li"},'"Constraint"')),(0,l.kt)("li",{parentName:"ul"},"valid properties - ",(0,l.kt)("inlineCode",{parentName:"li"},"Type: string, Point1: Point, Point2: Point, Visible: boolean | nil, Thickness: number | nil, RestLength: number | nil, SpringConstant: number | nil, Color: Color3 | nil"),","),(0,l.kt)("li",{parentName:"ul"},"valid types - ",(0,l.kt)("inlineCode",{parentName:"li"},"Spring"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Rod"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Rope"))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),'"Must Have" Properties')),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Type: string\nPoint1: Point\nPoint2: Point"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'Engine:Create("Constraint", {\n    Type = "Rope",\n    Point1 = SomePoint1,\n    Point2 = SomePoint2,\n    Visible = true,\n    RestLength = 100\n})\n')),(0,l.kt)("h4",{id:"creating-new-rigidbodies"},"Creating new RigidBodies"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"objectName - ",(0,l.kt)("inlineCode",{parentName:"li"},'"RigidBody"')),(0,l.kt)("li",{parentName:"ul"},"valid properties - ",(0,l.kt)("inlineCode",{parentName:"li"},"Structure: table | nil, Object: GuiObject, Mass: number|nil, Collidable: boolean | nil, Anchored: boolean | nil, LifeSpan: number | nil, KeepInCanvas: boolean | nil, Gravity: Vector2 | nil, Friction: number | nil, AirFriction: number | nil"),",")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),'"Must Have" Properties')),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Object: GuiObject"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Supported UI Elements"),(0,l.kt)("ul",null,(0,l.kt)("li",null,"Frame"),(0,l.kt)("li",null,"ScrollingFrame"),(0,l.kt)("li",null,"ImageButton"),(0,l.kt)("li",null,"ImageLabel"),(0,l.kt)("li",null,"TextLabel"),(0,l.kt)("li",null,"TextBox"),(0,l.kt)("li",null,"TextButton"),(0,l.kt)("li",null,"VideoFrame"),(0,l.kt)("li",null,"ViewportFrame"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'Engine:Create("RigidBody", {\n    Mass = 1,\n    Object = SomeGuiObject,\n    Collidable = true,\n    Anchored = false,\n})\n')),(0,l.kt)("p",null,"If you wish to define custom Structures for RigidBodies. Check out the ",(0,l.kt)("a",{parentName:"p",href:"https://jaipack17.github.io/Nature2D/docs/tutorial-basics/Creating%20Custom%20RigidBodies"},"tutorial"),"!"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginecreatecanvas"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:CreateCanvas()")),(0,l.kt)("p",null,"This function is used to initialize boundaries to which all bodies and constraints obey. An object cannot go past this boundary. By default this canvas is set to the initial screen size (workspace.CurrentCamera.ViewportSize). In order to let bodies go past this boundary use the ",(0,l.kt)("inlineCode",{parentName:"p"},"RigidBody:KeepInCanvas()")," method. If you wish to render Constraints and Points on screen. Set a frame with the same size as the canvas to ",(0,l.kt)("inlineCode",{parentName:"p"},"engine.canvas.frame"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"topLeft: AbsolutePosition (Vector2), size: AbsoluteSize (Vector2)")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"nil"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginestart"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:Start()")),(0,l.kt)("p",null,"This method is used to start simulating rigid bodies and constraints. This method is responsible for updating rigid bodies' and constraints' positions along with collision detection and response according to different configurations. If no rigid bodies or constraints are found when this method is called, a warning is sent in the console."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"none")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"nil"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginestop"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:Stop()")),(0,l.kt)("p",null,"This method is used to stop simulating rigid bodies and constraints. All connections created when ",(0,l.kt)("a",{parentName:"p",href:"#enginestart"},(0,l.kt)("inlineCode",{parentName:"a"},"Engine:Start()"))," is called, are disconnected."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginesetphysicalproperty"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:SetPhysicalProperty()")),(0,l.kt)("p",null,"This method is used to configure universal physical properties possessed by all rigid bodies and constraints. Properties like Gravity, Friction, AirFriction and CollisionMultiplier can be set using this method."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"property: string, value")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"nil")),(0,l.kt)("li",{parentName:"ul"},"valid properties - ",(0,l.kt)("inlineCode",{parentName:"li"},'"Gravity": Vector2, "Friction": number, "AirFriction": number, "CollisionMultiplier": number'))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginesetsimulationspeed"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:SetSimulationSpeed()")),(0,l.kt)("p",null,"This method is used to determine the simulation speed of the engine. By default the simulation speed is set to 55."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"speed: number")),(0,l.kt)("li",{parentName:"ul"},"returns ",(0,l.kt)("inlineCode",{parentName:"li"},"nil"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"engineusequadtrees"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:UseQuadtrees()")),(0,l.kt)("p",null,"Determines if Quadtrees will be used in collision detection"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"use: boolean")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"nil"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"engineframerateindependent"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:FrameRateIndependent()")),(0,l.kt)("p",null,"Determines if rendering frame rate does not affect the simulation speed. By default set to true."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"independent: boolean")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"nil"))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"fetch-methods"},"Fetch Methods"),(0,l.kt)("h3",{id:"enginegetbodies"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetBodies()")),(0,l.kt)("p",null,"This method is used to fetch all RigidBodies that have been created. Ones that have been destroyed, won't be fetched."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"none")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"RigidBodies: table"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginegetconstraints"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetConstraints()")),(0,l.kt)("p",null,"This method is used to fetch all Constraints that have been created. Ones that have been destroyed, won't be fetched."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"none")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"Constraints: table"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginegetpoints"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetPoints()")),(0,l.kt)("p",null,"This method is used to fetch all Points that have been created."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"none")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"Points: table"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginegetbodybyid"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetBodyById()")),(0,l.kt)("p",null,"This method is used to fetch an individual rigid body from its ID. Every RigidBody has a unique ID which can be fetched using ",(0,l.kt)("inlineCode",{parentName:"p"},"RigidBody:GetId()")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"RigidBody.id"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"id: string")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"RigidBody"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginegetconstraintbyid"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetConstraintById()")),(0,l.kt)("p",null,"This method is used to fetch an individual constraint body from its ID."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"id: string")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"Constraint"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginegetdebuginfo"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetDebugInfo()")),(0,l.kt)("p",null,"Returns all debugging information about the Engine."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"none")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"info: DebugInfo"))),(0,l.kt)("p",null,"Check out the debugging information returned from this method ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jaipack17/Nature2D/blob/master/src/Types.lua#L130-L153"},"here")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginegetcurrentcanvas"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine:GetCurrentCanvas()")),(0,l.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),(0,l.kt)("strong",{parentName:"h5"},"Deprecation Warning"))),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This method is deprecated. It can no longer be used. Use ",(0,l.kt)("inlineCode",{parentName:"p"},"Engine:GetDebugInfo()")," instead."))),(0,l.kt)("p",null,"Returns current canvas the engine adheres to."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"parameters - ",(0,l.kt)("inlineCode",{parentName:"li"},"none")),(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"{ frame: Frame, topLeft: Vector2, size: Vector2 }"))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"enginestarted"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine.Started")),(0,l.kt)("p",null,"This event is fired when the engine starts the simulation."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"enginestopped"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine.Stopped")),(0,l.kt)("p",null,"This event is fired when the engine stops the simulation."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"engineobjectadded"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine.ObjectAdded")),(0,l.kt)("p",null,"Fires when a new Point, Constraint or RigidBody is created."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"newObject: RigidBody | Constraint | Point"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"engineobjectremoved"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine.ObjectRemoved")),(0,l.kt)("p",null,"Fires when a new Point, Constraint or RigidBody is destroyed."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"returns - ",(0,l.kt)("inlineCode",{parentName:"li"},"destroyedObject: RigidBody | Constraint | Point"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"engineupdated"},(0,l.kt)("inlineCode",{parentName:"h3"},"Engine.Updated")),(0,l.kt)("p",null,"Fires the moment all physics objects have been updated and rendered on screen."))}c.isMDXComponent=!0}}]);