"use strict";(self.webpackChunknature_2_d_docs=self.webpackChunknature_2_d_docs||[]).push([[991],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=i,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7186:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:1},s="Creating RigidBodies",c={unversionedId:"tutorial-basics/Creating RigidBodies",id:"tutorial-basics/Creating RigidBodies",isDocsHomePage:!1,title:"Creating RigidBodies",description:"Creating rigidbodies in the engine is fairly simple, just configure the engine and use Engine:Create() method! When a RigidBody is created, a unique ID is assigned to it, Points are created for its vertices and these points are connected with Constraints!",source:"@site/docs/tutorial-basics/Creating RigidBodies.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/Creating RigidBodies",permalink:"/Nature2D/docs/tutorial-basics/Creating RigidBodies",editUrl:"https://github.com/jaipack17/Nature2D/edit/master/docs/docs/tutorial-basics/Creating RigidBodies.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Conceptual Understanding",permalink:"/Nature2D/docs/works"},next:{title:"Creating a Canvas",permalink:"/Nature2D/docs/tutorial-basics/Custom Canvas"}},u=[],d={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-rigidbodies"},"Creating RigidBodies"),(0,a.kt)("p",null,"Creating rigidbodies in the engine is fairly simple, just configure the engine and use ",(0,a.kt)("inlineCode",{parentName:"p"},"Engine:Create()")," method! When a RigidBody is created, a unique ID is assigned to it, Points are created for its vertices and these points are connected with Constraints! "),(0,a.kt)("p",null,"RigidBodies support the following UI elements. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Frame"),(0,a.kt)("li",{parentName:"ul"},"ScrollingFrame"),(0,a.kt)("li",{parentName:"ul"},"ImageButton"),(0,a.kt)("li",{parentName:"ul"},"ImageLabel"),(0,a.kt)("li",{parentName:"ul"},"TextLabel"),(0,a.kt)("li",{parentName:"ul"},"TextBox"),(0,a.kt)("li",{parentName:"ul"},"TextButton"),(0,a.kt)("li",{parentName:"ul"},"VideoFrame"),(0,a.kt)("li",{parentName:"ul"},"ViewportFrame")),(0,a.kt)("p",null,"In this example, we create the following simulation:"),(0,a.kt)("iframe",{width:"675",height:"400",src:"https://user-images.githubusercontent.com/74130881/137440874-5af0adc0-0b7f-4d3e-afd0-7505cda7fb1a.mp4",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The first step would be the create a frame which will be an anchored RigidBody."),(0,a.kt)("img",{src:"https://user-images.githubusercontent.com/74130881/137439187-c4f7b98a-7efb-4c86-9f51-d18e93813df5.png",width:"500px"}),(0,a.kt)("p",null,"Next we'll create separate ImageLabels for each box, you can do this using a script as well! For the boxes, I used the following image:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/74130881/137439711-2dc81369-99db-4a43-9cdf-cf89d492af2b.png",alt:"crate"})),(0,a.kt)("p",null,"I spread the boxes around and group them inside a single folder!"),(0,a.kt)("img",{src:"https://user-images.githubusercontent.com/74130881/137439856-f7c24950-55fc-4c96-99fa-26891fcfe1f9.png",width:"500px"}),(0,a.kt)("p",null,"Let's bring our boxes to life! Firstly we start by initializing our engine."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal Nature2D = require(ReplicatedStorage:FindFirstChild("Nature2D"))\n\nlocal ScreenGui = script.Parent\nlocal Canvas = ScreenGui.Canvas\n\nlocal engine = Nature2D.init(ScreenGui)\n')),(0,a.kt)("p",null,"Next we make the Anchored base an anchored rigidbody!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'engine:Create("RigidBody", {\n    Object = Canvas.AnchoredPart,\n    Collidable = true,\n    Anchored = true\n})\n')),(0,a.kt)("p",null,"We now loop through each box in the 'Boxes' folder and make it an unanchored rigid body! Lastly, we start the engine and boom! You have the simulation ready."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'for _, box in ipairs(Canvas.Boxes:GetChildren()) do\n    engine:Create("RigidBody", {\n        Object = box,\n        Collidable = true,\n        Anchored = false\n    })\nend\n\nengine:Start()\n')),(0,a.kt)("p",null,"This is how easily you can create RigidBodies for your games with potentially any UI element. You can try replacing them with textboxes, viewportframes etc!"))}p.isMDXComponent=!0}}]);